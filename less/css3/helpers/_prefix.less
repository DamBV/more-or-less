@import '../../fn/_in';

.prefix(...) {}
.prefix(@arr, @prefix)  {.prefix(@arr, @prefix, '')}
.prefix(@arr, @prefix, @glue)  {
    @prefixed: transform, box-shadow, border-radius, opacity;
    .-prefix(@s) {
        .in(@prefixed, @s);
        .-try(...) when (@-){@compared: e('@{prefix}@{s}');}
        .-try(...) when not (@-){@compared: e('@{s}');}
        .-try(@s);
    }
    .prefix(@word, @arr, @prefix, @glue, @n) when (@n >= 0) {
        .-return(@wordResult, @n2) when (@n2 = 0) {@string: ~'@{wordResult}';}
        .-return(@word, @n);
        @add: extract(@arr, @n);
        .-prefix(@add);
        .prefix('@{compared}@{glue}@{word}', @arr, @prefix, @glue, @n - 1);
    }
    @last: extract(@arr, length(@arr));
    .-prefix(@last);
    .prefix(@compared, @arr, @prefix, @glue, length(@arr) - 1);
}
