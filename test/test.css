/***********************
testing CSS3 misc-mixins
***********************/
.border-radius {
  border-radius: 1px 2px 3px 4px;
}
.box-shadow {
  box-shadow: 1px 0 2px rgba(0, 0, 0, 0.3), 0 1px 2px rgba(255, 0, 0, 0.3);
}
.box-sizing {
  box-sizing: border-box;
}
.background-size {
  background-size: 10px auto, 100px auto;
}
.calc {
  height: calc(100% - 10px);
  width: calc(50% - 20px);
}
.opacity {
  opacity: 0.4;
}
.text-overflow-ellipsis {
  text-overflow: ellipsis;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  white-space: no-wrap;
  word-wrap: normal;
}
/*****************************
testing CSS3 transition-mixins
*****************************/
.transition-oneline {
  transition: transform 200ms linear 400ms;
}
.transition-oneline {
  transition: transform 200ms, height 500ms;
}
.transition-oneline {
  transition: transform 200ms linear, height 500ms linear, box-shadow 500ms linear, opacity 500ms linear;
}
.transition-separated {
  transition-property: all;
  transition-duration: 200ms;
  transition-timing-function: linear;
  transition-delay: 400ms;
}
.transition-prop-transform {
  transition-property: transform;
}
.transition-prop-mutli-with-transform {
  transition-property: transform, color, height;
}
.transition-prop-mutli-with-transform-and-boxShadow {
  transition-property: transform, color, box-shadow;
}
.transition-prop {
  transition-property: height;
}
.transition-multi {
  transition-property: height, top, left;
}
/*****************************
testing CSS3 animation-mixins
*****************************/
.animation-oneline {
  animation: test-animation 200ms linear 200ms;
}
.animation-delay {
  animation-delay: 200ms;
}
.animation-timing-function {
  animation-timing-function: linear;
}
.animation-timing-function {
  animation-timing-function: linear;
}
.animation-fill-mode {
  animation-fill-mode: forward;
}
/****************************
testing CSS3 transform-mixins
****************************/
.transforms {
  transform: translate(2px, 3px) rotate(3deg) scale(0.4);
}
.transforms {
  transform: perspective(700px) rotate3d(1, 1, 0, 180deg);
}
/*******************
testing image-mixins
*******************/
.sprite-right {
  background-color: transparent;
  background-image: url('../img/sprite.png');
  background-size: auto 90px;
  background-repeat: no-repeat;
}
.sprite-right.one {
  background-position: 0px 0;
}
.sprite-right.two {
  background-position: -30px 0;
}
.sprite-right.three {
  background-position: -60px 0;
}
.sprite-down {
  background-color: transparent;
  background-image: url('../img/sprite.png');
  background-size: 90px auto;
  background-repeat: no-repeat;
}
.sprite-down.four {
  background-position: 0 0px;
}
.sprite-down.five {
  background-position: 0 -30px;
}
.sprite-down.six {
  background-position: 0 -60px;
}
/****************
testing gradients
****************/
.background-image {
  background-image: linear-gradient(to top, #000000, #ffffff) radial-gradient(45px 45px, farthest-corner, #ffffff 0%, #000000 100%) url('test.png');
}
.background-image {
  background-image: linear-gradient(to top left, #000000, #ffffff);
  background-image: linear-gradient(to bottom right, #000000, #ffffff);
  background-image: linear-gradient(to right, #000000, #ffffff);
  background-image: linear-gradient(to bottom, #000000, #ffffff);
}
test-svg {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #000000), color-stop(100%, #ff0000));
  background-image: linear-gradient(to bottom, #000000, #ff0000);
}
test-svg {
  background-image: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #000000), color-stop(100%, #ff0000));
  background-image: linear-gradient(to bottom right, #000000, #ff0000);
}
test-svg {
  background-image: -webkit-gradient(radial, 50% 50%, 0, 50% 50%, 100, from(#000000), to(#ff0000));
  background-image: radial-gradient(closest-corner, #000000, #ff0000);
}
/****************
testing font-face
****************/
@font-face {
  font-family: myFont;
  src: url('fonts/myFont.eot');
  src: url('fonts/myFont.eot?#iefix') format('embedded-opentype'), url('fonts/myFont.woff') format('woff'), url('fonts/myFont.ttf') format('truetype'), url('fonts/myFont.svg#myFont') format('svg');
  font-weight: normal;
  font-style: normal;
}
/****************
testing keyframes
****************/
@keyframes testanimation {
  0% {
    left: 0;
    transform: translate(10px, 20px);
  }
  100% {
    left: 100%;
    transform: translate(100px, 200px);
  }
}
/************************
testing animation library
************************/
@keyframes slide-in {
  0% {
    left: -100%;
  }
  100% {
    left: 0%;
  }
}
@keyframes slide-out {
  0% {
    left: 0;
  }
  100% {
    left: -100%;
  }
}
@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
/*************
testing repeat
*************/
.test.test.test.test.test {
  float: right;
}
.test and .test and .test and .test and .test {
  float: right;
}
.test foo .test foo .test foo .test foo .test {
  float: right;
}
.test + .test + .test + .test + .test {
  float: right;
}
/***********
testing join
***********/
.animals:after {
  content: 'cat and tiger and lion';
}
/*******************
testing index (find)
*******************/
.tools {
  saw: 1;
}
.fruits {
  banana: 3;
}
.fruits {
  orange: 2;
}
.fruits {
  tomato: -1;
}
/*******************
testing inArray (in)
*******************/
.tools {
  saw: true;
}
.fruits {
  banana: true;
}
.fruits {
  orange: true;
}
.fruits {
  tomato: false;
}
/**************
testing if-else
**************/
log {
  isnumber: then;
}
log {
  true: then;
}
log {
  false: else;
}
foo {
  bar: baz;
}
log {
  lowerthanequal: then;
}
log {
  lightnessgt: then;
}
/***************
testing scope
***************/
test {
  a: a;
  b: b;
  foo: foo;
  bar: bar;
}
test header {
  height: 100px;
}
header {
  height: c;
}
footer {
  width: c;
}
